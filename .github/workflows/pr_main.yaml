name: Kind
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup kind
        run: |
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOBIN
          mkdir -p $GOBIN

          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x kubectl && mv kubectl $GOBIN
          wget https://github.com/kubernetes-sigs/kind/releases/download/v0.5.0/kind-linux-amd64 && chmod +x kind-linux-amd64 && mv kind-linux-amd64 $GOBIN/kind

          kind create cluster --config kind/config.yaml --wait 300s
          export KUBECONFIG="$(kind get kubeconfig-path)"

          kubectl wait --for=condition=Ready pods --all --namespace kube-system
          kubectl get nodes

      - name: Setup helm & Kustomize
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash

      - name: Setup k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v0.44.0/k6-v0.44.0-linux-amd64.tar.gz -L | tar xvz --strip-components 1

      - name: Install nginx controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/baremetal/deploy.yaml

          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s

      - name: Run daemon port forwarding for nginx ingress at port 8080
        run: |
          kubectl port-forward --namespace=ingress-nginx service/ingress-nginx-controller 8080:80&

      - name: Add /etc/hosts aliases with 2 custom domains
        run: |
          sudo echo "127.0.0.1 foo.localhost bar.localhost" | sudo tee -a /etc/hosts

      - name: Install foo service and test
        run: |
          kubectl apply -k k8s/overlay/foo
          npx wait-on http://foo.localhost:8080
          MY_URL=http://foo.localhost:8080 ./k6 run --out json=foo.json k6s/script.js

      - name: Install bar service and test
        run: |
          kubectl apply -k k8s/overlay/bar
          npx wait-on http://bar.localhost:8080
          MY_URL=http://bar.localhost:8080 ./k6 run --out json=bar.json k6s/script.js

      - name: PR comment with test results for both services
        uses: mshick/add-pr-comment@v2
        with:
          message-path: |
            bar.json
            foo.json
          preformatted: true
